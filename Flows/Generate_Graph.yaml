version: 0.0.2                          

metadata:
  name: "Roadmap Generator"                              
  description: " Helps you to build a roadmap to learn any topic efficiently, also gives you assignmnets."       
  author: "swapnilsaysloud"                              
  tags: []                      
  private: false                                       

# Define the input variables required
inputs:
  input_topic:                                             
    type: string                                       
    description: "Topic for which we want to build the roadmap"
    required: true
    example: "Artificial Intelligence"


# LLM configuration
model:
  provider: "openai"                            
  name: "gpt-4o"                                                    

# Prompt template configuration
prompt: |
  


  first find out the {input_topic} from the previous statement 

  Generate a JSON structure for an efficient learning path on the topic of "{input_topic}". The JSON should represent a graph structure for a learning journey. Follow this exact structure, replacing the example content with appropriate content for {input_topic}.

  This is the JSON structure that I am expecting. Make sure the response is in correct json format.
    topic: {input_topic}
    levels:
      level: 0
      nodes:
        id: node-0-1
          data:
            title: {input_topic}
            content: Brief overview of {input_topic}.
            isCompulsory: true
            isOpen: false
      level: 1 
      nodes:
        id: node-1-1
          data:
            title: Fundamental Concept 1
            content: Description of the first fundamental concept.
            isCompulsory: true
            isOpen: false
        id: node-1-2
          data:
            title: Fundamental Concept 2
            content: Description of the second fundamental concept.
            isCompulsory: true
            isOpen: false
        id: node-1-3
          Data:
            title: Related Topic or Assignment
            content: Description of a related topic or an assignment.
            isCompulsory: false
            isOpen: false
      edges:
        id: edge-0-1-to-1-1
          source: node-0-1
          target: node-1-1
          style: stroke color: #436e86
        id: edge-0-1-to-1-2
          source: node-0-1
          target: node-1-2
          style: stroke color: #436e86
        id: edge-0-1-to-1-3
          source: node-0-1
          target: node-1-3
          style: stroke color: #436e86
      level: 2
      nodes:
        id: node-2-1  
          data:
            title: Advanced Concept 1
            content: Description of the first advanced concept.
            isCompulsory: true
            isOpen: false
        id: node-2-2
          data:
            title: Advanced Concept 2
            content: Description of the second advanced concept.
            isCompulsory: true
            isOpen: false
        id: node-2-3
          data:
            title: Related Topic or Assignment
            content: Description of another related topic or an assignment.
            isCompulsory: false
            isOpen: false
      edges:
        id: edge-1-1-to-2-1
          source: node-1-1
          target: node-2-1
          style: stroke color: #436e86
        id: edge-1-2-to-2-2
          source: node-1-2
          target: node-2-2
          style: stroke color: #436e86
        id: edge-1-2-to-2-3
          source: node-1-2
          target: node-2-3
          style: stroke color: #436e86

  Guidelines.
  1. Replace "{input_topic}" with the actual topic.
  2. Provide concise titles (max 50 characters) and brief content descriptions (max 150 characters) for each node.
  3. Ensure compulsory nodes (isCompulsory is true) form the main learning path.
  4. Non-compulsory nodes (isCompulsory is false) should represent assignments or related but non-essential topics.
  5. You may add or remove nodes and levels as necessary, but maintain at least 4 levels (including level 0). It is not important to have have only 3 levels like the example, but make sure the structure is correct.
  6. Ensure all node IDs and edge IDs are unique and properly connected.
  7. The JSON must be valid and properly formatted.
  8. include assignments too if relevant
  Provide only the JSON as your response, with no additional explanation.
readme: |
  Pilot-Testing
